AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation sample template: Create a Amazon Linux 2 stack using a single EC2 instance.
  **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    Default: 'MyKeyPair'
    ConstraintDescription: Can contain only ASCII characters.
  SSHLocation:
    Description: The IP address range that can be used to SSH to the EC2 instances
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
Resources:
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      UserData:
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            yum update -y
            yum install httpd -y
            amazon-linux-extras install -y php7.2 -y
            cd ~
            git clone https://github.com/iwouldrathercode/pilot.git
            cd pilot
            git checkout 02-server-availability
            cp initial_implementation/application/index.php /var/www/html/index.php
            systemctl start httpd
            systemctl enable httpd
            usermod -a -G apache ec2-user
            chown -R ec2-user:apache /var/www
            chmod 2775 /var/www && find /var/www -type d -exec sudo chmod 2775 {} \;
            find /var/www -type f -exec sudo chmod 0664 {} \;
            systemctl start httpd
            systemctl enable httpd
      ImageId: 'ami-0b0dcb5067f052a63'
      InstanceType: 't2.micro'
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: 'MyKeyPair'
      Tags: 
        - Key: "Name"
          Value: "02-server_initial_implementation"
        - Key: "Project"
          Value: "pilot"
        - Key: "Branch"
          Value: "02-sever-availability"
        - Key: "Implementation"
          Value: "initial"
  WebServerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable HTTP access via port 80 and SSH access via port 22
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
Outputs:
  WebsiteURL:
    Description: URL for newly created stack
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WebServerInstance
          - PublicDnsName